diff --git a/sources/PseudoTerminal.m b/sources/PseudoTerminal.m
index 6fa7acf5e..4a66acb91 100644
--- a/sources/PseudoTerminal.m
+++ b/sources/PseudoTerminal.m
@@ -440,14 +440,12 @@ static NSRect iTermRectCenteredVerticallyWithinRect(NSRect frameToCenter, NSRect
         case WINDOW_TYPE_COMPACT:
             return (mask |
                     NSWindowStyleMaskFullSizeContentView |
-                    NSWindowStyleMaskTitled |
                     NSWindowStyleMaskClosable |
                     NSWindowStyleMaskMiniaturizable |
                     NSWindowStyleMaskResizable);

         default:
             return (mask |
-                    NSWindowStyleMaskTitled |
                     NSWindowStyleMaskClosable |
                     NSWindowStyleMaskMiniaturizable |
                     NSWindowStyleMaskResizable |
@@ -794,7 +792,7 @@ static NSRect iTermRectCenteredVerticallyWithinRect(NSRect frameToCenter, NSRect
                 [[iTermWindowShortcutLabelTitlebarAccessoryViewController alloc] initWithNibName:@"iTermWindowShortcutAccessoryView"
                                                                                           bundle:[NSBundle bundleForClass:self.class]];
         }
-        if ((self.window.styleMask & NSWindowStyleMaskTitled) && _shortcutAccessoryViewController) {
+        if ((self.window.styleMask) && _shortcutAccessoryViewController) {
             [self.window addTitlebarAccessoryViewController:_shortcutAccessoryViewController];
             [self updateWindowNumberVisibility:nil];
         }
@@ -936,7 +934,7 @@ ITERM_WEAKLY_REFERENCEABLE
     return ([iTermPreferences boolForKey:kPreferenceKeyEnableDivisionView] &&
             preferredStyle != TAB_STYLE_MINIMAL &&
             !togglingFullScreen_ &&
-            (self.window.styleMask & NSWindowStyleMaskTitled) &&
+            (self.window.styleMask) &&
             ![self anyFullScreen] &&
             ![self tabBarVisibleOnTop]);
 }
@@ -1884,11 +1882,11 @@ ITERM_WEAKLY_REFERENCEABLE

         if (@available(macOS 10.14, *)) {
             if (!_shortcutAccessoryViewController ||
-                !(self.window.styleMask & NSWindowStyleMaskTitled)) {
+                !(self.window.styleMask)) {
                 windowNumber = [NSString stringWithFormat:@"%d. ", number_ + 1];
             }
         } else {
-            if (self.window.styleMask & NSWindowStyleMaskTitled) {
+            if (self.window.styleMask) {
                 windowNumber = [NSString stringWithFormat:@"%d. ", number_ + 1];
             }
         }
@@ -4149,7 +4147,7 @@ ITERM_WEAKLY_REFERENCEABLE
         [self.window setFrame:oldFrame_ display:YES];
         if (@available(macOS 10.14, *)) {
             if ([self.window respondsToSelector:@selector(addTitlebarAccessoryViewController:)] &&
-                (self.window.styleMask & NSWindowStyleMaskTitled)) {
+                (self.window.styleMask)) {
                 [self.window addTitlebarAccessoryViewController:_shortcutAccessoryViewController];
                 [self updateWindowNumberVisibility:nil];
             }
@@ -4466,7 +4464,7 @@ ITERM_WEAKLY_REFERENCEABLE
     [self repositionWidgets];
     [_contentView didChangeCompactness];
     if (@available(macOS 10.14, *)) {
-        if (self.window.styleMask & NSWindowStyleMaskTitled) {
+        if (self.window.styleMask) {
             [self updateTabBarControlIsTitlebarAccessoryAssumingFullScreen:YES];
         }
     }
